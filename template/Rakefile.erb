#!/usr/bin/env rake
# -*- mode: ruby; coding: utf-8 -*-

require 'rake'
require 'rspec/core/rake_task'

#variables to operate, are inserted to independ from dnswf
:target_zone => <%= target_zone %>
:target_zone_files => FileList.new(<%= target_zone_files %>)
:target_conf_files => FileList.new(<%= target_conf_files %>)

RSpec::Core::RakeTask.new(:spec) do |t|
  t.pattern = 'spec/*/*_spec.rb'
end

task :deploy       => [:backup, :diff, :install, :validate, :update_confirm, :update]
task :deploy_force => [:backup, :diff, :install, :validate, :update]

task :backup, [:zones] do |t, args|
  time_str = Time.now.strftime('%Y-%m-%d-%H-%M-%S')
  backup_dir = "backup/#{time_str}"
  (target_conf_files | target_zone_files).each do |f|
    directory "#{backup_dir}#{File.dirname(f)}"
    file f do
      cp f, File.dirname(f)
    end
  end
end

task :diff, [:zones] do |t, args|
  # diff conf files from src dst
  # diff conf files from src dst
end

task :install, [:zones] do |t, args|
  # install conf files from src dst
  # install zone files from src dst
end


task :validate, [:zones] do |t, args|
  # check conf file
  # check zone file
  # check zone serial updated
  # stop if invalid
end

task :update_confirm, [:zones] do |t, args|
  # reload dns config / reload dns server
  # zone transfer
end

task :update, [:zones] do |t, args|
  # reload dns config / reload dns server
  # zone transfer
end


task :rollback, [:zones] do |t, args|
  # move backuped files
  # increment zone serial
end
